import React, { useState, useEffect } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import './App.css';
import MovieList from './components/MovieList';
import MovieListHeading from './components/MovieListHeading';
import SearchBox from './components/SearchBox';
import ChatWindow from './components/ChatWindow';




const App = () => {
  const [movies, setMovies] = useState([]);
  const [selectedType, setSelectedType] = useState('movie');
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [messages, setMessages] = useState([
    { pseudo: "AG", content: "Bonjour ! Comment ça va ?" },
    { pseudo: "AG", content: "Tu regardes quoi comme film en ce moment ?" },
    { pseudo: "GF", content: "J'ai entendu parler d'un nouveau film qui est génial !" },
  ]);
  const [generatedImage, setGeneratedImage] = useState('');

  const getFeatured = async (selectedType) => {
    const url = `https://api.themoviedb.org/3/discover/${selectedType}?api_key=f33b828f3a9d89dcc02bf38eaea2b131&sort_by=popularity.desc&language=fr-FR`;

    const response = await fetch(url);
    const responseJson = await response.json();

    if (responseJson.results) {
      setMovies(responseJson.results);
    }
  };

  const getMovieRequest = async (selectedType, searchValue) => {
    if (searchValue === '') {
      await getFeatured(selectedType);
    } else {
      const url = `https://api.themoviedb.org/3/search/${selectedType}?query=${searchValue}&sort_by=popularity.desc&api_key=f33b828f3a9d89dcc02bf38eaea2b131&language=fr-FR`;

      const response = await fetch(url);
      const responseJson = await response.json();

      if (responseJson.results) {
        setMovies(responseJson.results);
      }
    }
  };

  const handleSearch = (searchValue) => {
    getMovieRequest(selectedType, searchValue);
  };

  const generateImage = async () => {
    try {
      const options = {
        method: "POST",
        headers: {
          'Content-Type': 'application/json',
          authorization: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYzIyNjU0NjQtMzVhNC00NTMwLTlkZTUtMDkzNWQ2MWE2MGU5IiwidHlwZSI6ImFwaV90b2tlbiJ9.fv5yretT5X8Jfi7E2psUB2A7WGecpivw_KY_Maze-1A",
        },
        body: JSON.stringify({
          providers: "amazon",
          text: "a Create a high-resolution movie poster amalgamating the visual aesthetics of two renowned films: 'Kung Fu Panda' and 'Megamind'. The poster should portray a vivid and dynamic scene, intricately weaving together iconic characters from each film into a cohesive narrative. Pay close attention to detail, ensuring the characters blend seamlessly and naturally within the composition. The foreground should feature prominent characters engaging in action or interaction, while the background should provide context and depth to the scene. Emphasize clarity and realism, with sharp and vibrant colors to captivate viewers' attention. Absolutely no text or logos should be present on the poster; let the image alone convey the essence of the combined cinematic worlds. Aim for a visually stunning and immersive artwork that sparks curiosity and imagination, inviting viewers to explore the intriguing fusion of these two beloved films.red flying balloon.",
          resolution: "512x512",
          fallback_providers: "",
        }),
      };
  
      const response = await fetch("https://api.edenai.run/v2/image/generation", options);
      const data = await response.json();
      console.log(data.amazon.items[0].image_resource_url); // Affiche le résultat dans la console
      setGeneratedImage(data.amazon.items[0].image_resource_url);
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    getFeatured(selectedType);
  }, [selectedType]);

  useEffect(() => {
    generateImage();
  }, []); // Appel uniquement au chargement initial*/

  return (
    <div className='container-fluid movie-app'>
      <div className='row d-flex align-items-center mt-4 mb-4'>
        <MovieListHeading heading='TC-Movies' />
        <SearchBox handleSearch={handleSearch} />
      </div>
      <div className='bouton-serie-film'>
        <button id='bouton-film' onClick={() => { setSelectedType('movie'); }} disabled={selectedType === 'movie'}>
          Film
        </button>
        <button id='bouton-serie' onClick={() => { setSelectedType('tv'); }} disabled={selectedType === 'tv'}>
          Série
        </button>
      </div>
      <div className='row'>
        <MovieList movies={movies} selectedType={selectedType} />
      </div>
      <h1>Films en favoris</h1>
      {/* Fenêtre de chat */}
      <div>
        <ChatWindow isChatOpen={isChatOpen} setIsChatOpen={setIsChatOpen} messages={messages} setMessages={setMessages} />
      </div>
      {/* Affichage de l'image générée par IA */}
      {generatedImage && <img src={generatedImage} alt="Generated by AI" />}
    </div>
  );
};

export default App;
